#!/usr/bin/env bash
switch_to() {
  if [[ -z $TMUX ]]; then
    tmux attach-session -t $1
  else
    tmux switch-client -t $1
  fi
}

has_session() {
  tmux list-sessions | grep -q "^$1:"
}

_create_session() {
  local session_name="$1"
  local session_dir="$2"
  local detach="$3"
  local tmuxp_flags="-s"
  local tmux_flags="-s"

  if [ "$detach" = true ]; then
    tmuxp_flags="-ds"
    tmux_flags="-ds"
  fi

  if [ -f "$HOME/.tmuxp/$session_name.yml" ]; then
    START_DIRECTORY="$session_dir" tmuxp load $tmuxp_flags $session_name $session_name
  elif [ -f "$HOME/.tmuxp/default.yml" ]; then
    START_DIRECTORY="$session_dir" tmuxp load $tmuxp_flags $session_name default
  else
    tmux new-session $tmux_flags $session_name -c $session_dir
  fi
}

create_session() {
  _create_session "$1" "$2" false
}

create_detached_session() {
  _create_session "$1" "$2" true
}

hydrate() {
  if [ -f $2/.tmux-sessionizer ]; then
    tmux send-keys -t $1 "source $2/.tmux-sessionizer" c-M
  elif [ -f $HOME/.tmux-sessionizer ]; then
    tmux send-keys -t $1 "source $HOME/.tmux-sessionizer" c-M
  fi
}

if [[ $# -eq 1 ]]; then
  selected=$1
else
  # If someone wants to make this extensible, i'll accept
  # PR
  selected=$(find ~/dev -mindepth 1 -maxdepth 1 -type d | fzf)
fi

if [[ -z $selected ]]; then
  exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
  create_session $selected_name $selected
  exit 0
fi

if ! has_session $selected_name; then
  create_detached_session $selected_name $selected
fi

switch_to $selected_name
